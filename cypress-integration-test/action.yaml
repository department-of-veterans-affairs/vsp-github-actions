name: Cypress Integration Test Action
description: A composite action to prepare and run an app-specific suite of Cypress tests.

inputs:
  BUILDTYPE:
    description: The build type for the application.
    default: vagovprod
  INTEGRATION_APP_PATTERN:
    description: The chosen app/product that will be tested.
    default: 
  CONTAINER_IMAGE:
    description: The container image used to run Cypress.
    default: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/dsva/cypress-io/cypress/browsers:node16.16.0-chrome107-ff107-edge
    required: false
  ECR_USER:
    description: ECR user secret
    default:
    required: true
  ECR_PASSWORD:
    description: ECR user secret
    default:
    required: true
  BUILD_EXISTS:
    description: 
    default: false
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        echo "Installing dependencies"
        yarn install --frozen-lockfile
      shell: bash
      with:
        key: ${{ inputs.key }}

    - name: Set output of NUM_CONTAINERS
      run: echo num=2 >> $GITHUB_OUTPUT

    - name: Set output of CI_NODE_INDEX
      run: echo ci_node_index=1 >> $GITHUB_OUTPUT

    - name: Unpack build
      run: |
        mkdir -p build/vagovprod
        tar -C build/vagovprod -xjf vagovprod.tar.bz2

    - name: Install dependencies
      uses: ./.github/workflows/install
      timeout-minutes: 20
      with:
        key: ${{ hashFiles('yarn.lock') }}
        yarn_cache_folder: .cache/yarn
        path: |
          .cache/yarn
          /github/home/.cache/Cypress
          node_modules

     - name: Start server
       if: needs.tests-prep.outputs.cypress-tests != '[]'
       run: node src/platform/testing/e2e/test-server.js --buildtype=vagovprod --port=3001 &

     - name: Run Cypress tests
       run: yarn cy:run --browser chrome --headless --spec "$INTEGRATION_APP_PATH"
       container:
         image: ${{ CONTAINER_IMAGE }}
         credentials:
          username: ${{ ECR_USER }}
          password: ${{ ECR_PASSWORD }}


  
