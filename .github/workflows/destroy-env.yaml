name: Destroy Env Workflow

on:
  workflow_call:
    inputs:
      environment:
        type: string

jobs:
  destroy-env:
    name: Destroy Env ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    permissions:
      contents: read
      pull-requests: write
      id-token: write
      repository-projects: write

    steps:
      - name: echo vars
        run: |
          echo "env_name=${{ inputs.environment }}"
          # echo "prt_preview_control_version=${{ inputs.prt_preview_control_version }}"
          # echo "eks_cluster_name=${{ inputs.eks_cluster_name }}"
      
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get current date
        id: date
        run: echo "name=date::$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.0
        with:
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE }}
          role-session-name: destroy-${{ github.event.repository.name }}
          aws-region: us-gov-west-1

      - uses: hashicorp/setup-terraform@v3

      - name: initialize terraform
        working-directory: terraform
        run: terraform init -no-color

      - name: create workspace
        working-directory: terraform
        run: |
          terraform workspace select -or-create ${{ inputs.environment }}

      - name: Destroy Terraform
        working-directory: terraform
        run: |
          touch terraform.json
          yq -o=json -i '.environment = "${{ inputs.environment }}"' terraform.json
          yq -o=json -i ".version = \"${GITHUB_REF_NAME}\"" terraform.json
          yq -o=json -i ".sha = \"${GITHUB_SHA}\"" terraform.json
          yq -o=json -i ".repo = \"${GITHUB_REPOSITORY}\"" terraform.json
          
          if [[ -f ./vars/${{ inputs.environment }}.tfvars ]]; then TF_ARGS="-var-file ./vars/${{ inputs.environment }}.tfvars"; fi

          terraform destroy -input=false -auto-approve \
            -var environment="${{ inputs.environment }}" \
            ${TF_ARGS} \
            -var-file terraform.json
